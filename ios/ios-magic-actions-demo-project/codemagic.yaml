workflows:
    ios-swiftly:
      name: ios_swiftly
      instance_type: mac_mini_m1
      environment:
        groups:
        # Add the group environment variables in Codemagic UI (either in Application/Team variables) - https://docs.codemagic.io/variables/environment-variable-groups/
          - app_store_credentials # <-- (APP_STORE_CONNECT_ISSUER_ID, APP_STORE_CONNECT_KEY_IDENTIFIER, APP_STORE_CONNECT_PRIVATE_KEY)
            # APP_STORE_CONNECT_ISSUER_ID <-- Put your App Store Connect Issuer Id here 
            # APP_STORE_CONNECT_KEY_IDENTIFIER <-- Put your App Store Connect Key Identifier here 
            # APP_STORE_CONNECT_PRIVATE_KEY <-- Put your App Store Connect Private Key here
            # See the following link for more details - https://docs.codemagic.io/code-signing-yaml/signing-ios/
            # https://appstoreconnect.apple.com/access/api
          - certificate_credentials # <-- (CERTIFICATE_PRIVATE_KEY - Put your Certificate Private Key here)
          - other
        vars:
          XCODE_WORKSPACE: "swiftly.xcworkspace"
          XCODE_SCHEME: "swiftly"
          BUNDLE_ID: "io.codemagic.cmswiftly"
          APP_STORE_APP_ID: 12345678 # <-- Put your Apple App ID here. This can be found in App Store Connect > Your App > General > App Information > Apple ID. 
        xcode: 14.2
        cocoapods: default
        ios_signing:
          distribution_type: app_store
          bundle_identifier: io.codemagic.cmswiftly
      triggering:
        events:
          - push
          - tag
          - pull_request
        branch_patterns:
          - pattern: develop
            include: true
            source: true
      scripts:
        - name: Codemagic CLI Tools build
          script: pip3 install codemagic-cli-tools # The Codemagic CLI tools are already installed on Codemagic servers
        - name: Initialize Pods 
          script: pod init && pod install
        - name: Set up provisioning profiles settings on Xcode project
          script: xcode-project use-profiles
        - name: Increment build number
          script: agvtool new-version -all $(($(app-store-connect get-latest-build-number "$APP_STORE_APP_ID") + 1))
        - name: Create archive
          script: xcode-project build-ipa --workspace "$XCODE_WORKSPACE" --scheme "$XCODE_SCHEME" --archive-xcargs "CODE_SIGN_STYLE=Manual DEVELOPMENT_TEAM=" --archive-flags "-destination 'generic/platform=iOS' CODE_SIGNING_REQUIRED=YES CODE_SIGNING_ALLOWED=NO"
        - name: Publish on App Store
          script: app-store-connect publish --beta-build-localizations=@file:whats_new.json
      artifacts:
        - build/ios/ipa/*.ipa
        - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
        - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
      publishing:
         app_store_connect:
           api_key: $APP_STORE_CONNECT_PRIVATE_KEY         # Contents of the API key, can also reference environment variable such as $APP_STORE_CONNECT_PRIVATE_KEY
           key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER       # Alphanumeric value that identifies the API key, can also reference environment variable such as $APP_STORE_CONNECT_KEY_IDENTIFIER
           issuer_id: $APP_STORE_CONNECT_ISSUER_ID         # Alphanumeric value that identifies who created the API key, can also reference environment variable such as $APP_STORE_CONNECT_ISSUER_ID
           submit_to_testflight: false                     # Optional boolean, defaults to false. Whether or not to submit the uploaded build to TestFlight beta review. Required for distributing to beta groups. Note: This action is performed during post-processing.
           # beta_groups:                                  # Specify the names of beta tester groups that will get access to the build once it has passed beta review. 
           #      - group name 1
           #      - group name 2                      
         email:
           recipients:
            - user_1@example.com
